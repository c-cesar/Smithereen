{# @pebvariable name="feed" type="smithereen.model.feed.NewsfeedEntry[]" #}
{%extends "page"%}
{%block content%}
{% include "feed_tabbar" with {'tab': "comments"} %}
<div class="summaryWrap" id="feedTopSummary">
	{% block topSummary %}
	<div class="summary">{{ L('summary_feed') }}</div>
	<span class="loader flR" id="feedFiltersLoader" style="display: none"></span>
	{% include "pagination" %}
	{% endblock %}
</div>
<div class="singleColumn" id="postList">
<div class="feedFilters">
	<form id="feedFilters" method="post" action="/feed/comments/setFilters?csrf={{ csrf }}">
		<label>
			<input type="checkbox" onchange="updateFeedFilters()" name="POST"{{ feedFilter contains "POST" ? ' checked' : '' }}/>
			<span class="feedIcon feedIconStatus"></span>
			<span class="ellipsize">{{ L('feed_type_posts') }}</span>
		</label>
		<label>
			<input type="checkbox" onchange="updateFeedFilters()" name="PHOTO"{{ feedFilter contains "PHOTO" ? ' checked' : '' }}/>
			<span class="feedIcon feedIconPhoto"></span>
			<span class="ellipsize">{{ L('feed_type_photos') }}</span>
		</label>
		<label>
			<input type="checkbox" onchange="updateFeedFilters()" name="BOARD_TOPIC"{{ feedFilter contains "BOARD_TOPIC" ? ' checked' : '' }}/>
			<span class="feedIcon feedIconTopic"></span>
			<span class="ellipsize">{{ L('feed_type_board_topics') }}</span>
		</label>
	</form>
</div>
<div id="feedContent">
{% block feedContent %}
{% set _currentDate='' %}
{%for entry in feed%}
	{% if entry.type=='POST' and posts[entry.objectID] is not null %}
	<div class="feedRow feedPostRow" id="postWrap{{ entry.objectID }}">
		{% include "wall_post" with {'post': posts[entry.objectID], 'showOwner': true} %}
	</div>
	{% elseif entry.type=="PHOTO" and photos[entry.objectID] is not null %}
	{% set photo=photos[entry.objectID] %}
	{% set interactions=photosInteractions[entry.objectID] %}
	{% set canComment=interactions.canComment %}
	<div class="feedRow feedPostRow">
		<div class="post">
			<div class="postAvaWrap">
				<a href="{{ profileURL(photo.authorID) }}"{{ profileRel(photo.authorID) }}>{{ users[photo.authorID] | pictureForAvatar('a') }}</a>
			</div>
			<div class="postContentWrap">
				<a href="{{ profileURL(photo.authorID) }}" class="authorName" {{ profileRel(photo.authorID) }}>{{ users[photo.authorID] | name }}</a>
				<div>{# "postInner" #}
					<div class="postContent">{{ photo.description | postprocessHTML | truncateText }}</div>
					<div class="feedRowPhotos">{{ renderPhotoGrid([photo], "single/#{photo.idString}") }}</div>
				</div>
				<div class="postInfo">
					{%- if interactions is not null -%}
					<span class="postActions contentActions">
						<span class="likeWrap" onmouseenter="likeOnMouseChange(this, true)" onmouseleave="likeOnMouseChange(this, false)">
							<a href="{{ photo.url }}/{% if interactions.isLiked %}un{% endif %}like?csrf={{ csrf }}" class="action like{% if interactions.isLiked %} liked{% endif %} popoverButton" id="likeButtonPhoto{{ photo.idString }}" data-obj-type="photo" data-obj-id="{{ photo.idString }}" data-popover-url="{{ photo.url }}/likePopover" {% if currentUser is not null %}onclick="return likeOnClick(this)"{% else %}data-ajax-box{% endif %} rel="nofollow">
								{{- L('like') }}<span class="icon">&nbsp;</span><span class="counter" id="likeCounterPhoto{{ photo.idString }}" data-count="{{ interactions.likeCount }}" style="{%if interactions.likeCount==0%}display: none{%endif%}">
								{{- interactions.likeCount | numberformat -}}
							</span></a>
							<span class="popoverPlace likePopoverWrap"></span>
						</span>
					</span>
					{%- endif -%}
					<a href="{{ photo.url }}" class="postLink">{{ LD(photo.createdAt) }}</a>
{#					{% if not realPost.local %}#}
{#						| <a href="{{ realPost.activityPubURL }}" target="_blank" rel="noopener">{{ L('open_on_server_X', {'domain': realPost.activityPubURL.host}) }}</a>#}
{#					{% endif %}#}
					{% if currentUser is not null and interactions.canComment %}
						<span id="postCommentLinkWrap{{ photo.idString }}" style="{{ interactions.commentCount==0 ? '' : 'display: none;' }}">| <a href="{{ photo.url }}" onclick="return showPostCommentForm('{{ photo.idString }}')">{{ L('add_comment') }}</a></span>
					{% endif %}
				</div>
			</div>
		</div>
		{% set comments=photosComments[entry.objectID] %}
		<div class="commentsPreviewWrap">
			{% set replyCount=interactions.commentCount %}
			{% if (commentViewType=='FLAT' ? replyCount : comments.total)>comments.list.size %}
				<a href="{{ photo.url }}" onclick="return loadOlderComments('{{ photo.idString }}', 'photo')" class="loadPrev" id="loadPrevBtn_{{ photo.commentParentID.htmlElementID }}" data-first-id="{{ comments.list.first.post.idString }}">{{ commentViewType=='FLAT' ? L('comments_show_X_more_comments', {'count': replyCount-comments.list.size}) : L('show_previous_comments') }}</a>
				<div class="prevLoader loader" id="prevLoader_{{ photo.commentParentID.htmlElementID }}" style="display: none;"></div>
			{% endif %}
			<div class="commentsPreview" id="comments_{{ photo.commentParentID.htmlElementID }}">
			{%- for reply in comments.list %}
				{% include "comment" with {'post': reply, 'preview': true, 'replyFormID': commentViewType=='FLAT' ? "wallPostForm_comment_#{photo.commentParentID.htmlElementID}" : "wallPostForm_commentReply_#{photo.commentParentID.htmlElementID}", 'parentObject': photo, 'baseReplyLevel': 0} %}
			{% endfor -%}
			</div>
			{% set interactions=photosInteractions[entry.objectID] %}
			{% if currentUser is not null and interactions.canComment %}
				{% include "wall_post_form" with {'id': "comment_#{photo.commentParentID.htmlElementID}", 'action': "/comments/createComment?parentType=photo&parentID="+photo.idString, 'showReplyBar': commentViewType=='FLAT', 'isComment': true} %}
				{% if commentViewType!='FLAT' %}{% include "wall_post_form" with {'id': "commentReply_#{photo.commentParentID.htmlElementID}", 'hidden': true, 'action': "/comments/createComment?parentType=photo&parentID="+photo.idString, 'isComment': true} %}{% endif %}
			{% endif %}
		</div>
	</div>
	{% elseif entry.type=="BOARD_TOPIC" and topics[entry.objectID] is not null %}
	{% set topic=topics[entry.objectID] %}
	{% set canComment=not topic.closed %}
	<div class="feedRow feedPostRow">
		<div class="post">
			<div class="postAvaWrap">
				<a href="{{ profileURL(-topic.groupID) }}">{{ groups[topic.groupID] | pictureForAvatar('a') }}</a>
			</div>
			<div class="postContentWrap">
				<a href="{{ profileURL(-topic.groupID) }}" class="authorName">{{ groups[topic.groupID] | name }}</a>
				<div>
					<div class="postContent marginBefore marginAfter"><span class="feedIcon feedIconTopic"></span><span class="grayText">{{ L('board_topic') }}</span> <a href="{{ topic.url }}">{{ topic.title }}</a></div>
				</div>
				<div class="postInfo">
					<a href="{{ topic.url }}" class="postLink">{{ LD(topic.createdAt) }}</a>
				</div>
			</div>
		</div>
		{% set comments=topicsComments[entry.objectID] %}
		<div class="commentsPreviewWrap">
			{% set replyCount=topic.numComments %}
			{% if replyCount>comments.list.size %}
				<a href="{{ topic.url }}" onclick="return loadOlderComments('{{ topic.idString }}', 'topic')" class="loadPrev" id="loadPrevBtn_{{ topic.commentParentID.htmlElementID }}" data-first-id="{{ comments.list.first.post.idString }}">{{ L('comments_show_X_more_comments', {'count': replyCount-comments.list.size}) }}</a>
				<div class="prevLoader loader" id="prevLoader_{{ topic.commentParentID.htmlElementID }}" style="display: none;"></div>
			{% endif %}
			<div class="commentsPreview" id="comments_{{ topic.commentParentID.htmlElementID }}">
			{%- for reply in comments.list %}
				{% include "comment" with {'post': reply, 'preview': true, 'replyFormID': "wallPostForm_comment_#{topic.commentParentID.htmlElementID}", 'parentObject': topic, 'baseReplyLevel': 0, 'maxReplyDepth': 0, 'commentViewType': 'FLAT'} %}
			{% endfor -%}
			</div>
			{% if canComment %}
				{% include "wall_post_form" with {'id': "comment_#{topic.commentParentID.htmlElementID}", 'action': "/comments/createComment?parentType=topic&parentID="+topic.idString+"&from=feed", 'showReplyBar': true, 'isComment': true} %}
			{% endif %}
		</div>
	</div>
	{% endif %}
{% else %}
<div class="emptyState" id="wallEmptyState">{{ L('feed_empty_comments') }}</div>
{%endfor%}
{% endblock %}
</div>
</div>
<div class="bottomSummaryWrap" id="feedBottomSummary">
	{% block bottomSummary %}{% include "pagination" %}{% endblock %}
</div>
{%endblock%}
