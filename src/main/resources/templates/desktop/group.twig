{# @pebvariable name="group" type="smithereen.model.Group" #}
{# @pebvariable name="canEditGroup" type="boolean" #}
{# @pebvariable name="canAccessContent" type="boolean" #}
{%extends "page"%}
{% set canEditGroup=userPermissions is not null and userPermissions.canEditGroup(group) %}
{% set canManageGroup=userPermissions is not null and userPermissions.canManageGroup(group) %}
{%block content%}
{%if group.domain%}
<div class="marginsAreMessy"></div>
<div class="settingsMessage">
	{{ L('incomplete_profile') }}<br/>
	<a href="{{ group.url }}" target="_blank">{{ L('open_on_server_X', {'domain': group.domain}) }}</a>
</div>
{%endif%}
{% if group.banInfo is not null and currentUser is not null and userPermissions.hasPermission('MANAGE_GROUPS') %}
{% if group.domain is empty and movedTo is null %}<div class="marginsAreMessy"></div>{% endif %}
{% set banModerator=users[group.banInfo.moderatorID] %}
<div class="settingsMessage textByItself">
	{% if group.banStatus=='SUSPENDED' %}
	{% if group.domain is empty %}
	<p>{{ L('admin_group_state_suspended', {'deletionTime': LD(deletionTime)}) }}</p>
	{% else %}
	<p>{{ L('admin_group_state_suspended_foreign') }}</p>
	{% endif %}
	{% elseif group.banStatus=='HIDDEN' %}
	<p>{{ L('admin_group_state_hidden') }}</p>
	{% elseif group.banStatus=='SELF_DEACTIVATED' %}
	<p>{{ L('admin_group_state_self_deactivated', {'deletionTime': LD(deletionTime)}) }}</p>
	{% endif %}
	{% if group.banInfo is not null %}
	{% if group.banInfo.suspendedOnRemoteServer %}<p>{{ L('admin_group_suspended_remotely') }}</p>{% endif %}
	<p>{% if banModerator is not null %}<a href="{{ banModerator.profileURL }}">{{ banModerator | name }}</a>, {% endif %}{{ LD(group.banInfo.bannedAt()) }}</p>
	{% if group.banInfo.message is not empty %}<p>{{ L('admin_group_ban_message') }}: {{ group.banInfo.message }}</p>{% endif %}
	{% endif %}
</div>
{% endif %}
<div class="columnLayout rightNarrow" id="profileLayout">
	<!-- left column -->
	<div id="left">
		<div class="profileNameW">
			<h2>{{ group.name }}</h2>
			{% if canEditGroup %}
			<div class="profileStatusW">
				<a href="javascript:void(0)" id="profileStatusLink" style="{% if group.statusText is not empty %}display: none{% endif %}" onclick="showProfileStatusBox()">{{ L('profile_update_status') }}</a>
				<div class="profileStatus editable" id="profileStatusCont" style="{% if group.statusText is empty %}display: none{% endif %}" onclick="showProfileStatusBox()" data-tooltip="{{ L('update_status') }}">{{ group.statusText }}</div>
				<form id="profileStatusBox" action="/groups/{{ group.id }}/updateStatus?csrf={{ csrf }}" method="post" style="display: none" data-ajax>
					<input type="text" name="status" maxlength="100" value="{{ group.statusText }}"/>
					<div class="buttonW">
						<div></div>
						<input type="submit" value="{{ L('save') }}"/>
					</div>
				</form>
			</div>
			{% elseif group.statusText is not empty %}
			<div class="profileStatusW">{{ group.statusText }}</div>
			{% endif %}
		</div>
		<div class="profileFields">
			{% for fld in profileFields %}
			<div class="label">{{ fld.name }}:</div>
			<div>{{ fld.value | postprocessHTML }}</div>
			{% endfor %}
		</div>
		{% if canAccessContent %}
		{% if group.boardState!='DISABLED' and (canCreateTopics or boardTopics.list is not empty) %}
		{% include "profile_module_board" with {'group': group, 'topics': boardTopics.list, 'headerTitle': L('group_board'), 'headerHref': "/groups/#{group.id}/board", 'subheaderTitle': L('board_X_topics', {'count': boardTopics.total}), 'subheaderLink': canCreateTopics ? L('board_create_topic') : null, 'subheaderLinkHref': "/groups/#{group.id}/createTopic"} %}
		{% endif %}
		{% if group.wallState!='DISABLED' %}
		{% include "profile_module_wall" with {'wallOwner': group, 'isGroup': true, 'headerTitle': L('wall'), 'headerHref': "/groups/#{group.id}/wall", 'additionalHeader': L('X_posts', {'count': totalItems}), 'additionalHeaderId': 'wallPostCount', 'wallPostCount': totalItems} %}
		{% endif %}
		{% endif %}
	</div>

	<!-- right column -->
	<div id="right">
		{% if group.hasAvatar %}
		{% if canEditGroup %}
		<div class="selfAvaOverlay">
			{% if avatarPvInfo is not null %}
			<a href="{{ avatarPhoto.url }}" data-pv="{{ json(avatarPvInfo) }}" onclick="return openPhotoViewer(this)">{{ group | pictureForAvatar('cr') }}</a>
			{% else %}
			{{ group | pictureForAvatar('cr') }}
			{% endif %}
			<div class="selfAvaActionsW">
				<ul class="selfAvaActions actionList">
					<li><a href="/groups/{{ group.id }}/edit" class="ellipsize" onclick="new ProfilePictureLayer({{ group.id }}).show(); return false;"><span class="icon"></span>{{L('update_profile_picture')}}</a></li>
					{% if avatarPhoto is not null %}<li><a href="javascript:void(0)" onclick="new ProfilePictureLayer({{ group.id }}, '{{ avatarPhoto.idString }}', '{{ avatarPhoto.image.getUrlForSizeAndFormat('w', 'jpg') }}', {{ json(avatarPhoto.metadata.cropRects) }}).show(); return false;" class="ellipsize"><span class="icon thumb"></span>{{ L('avatar_edit_thumbnail') }}</a></li>{% endif %}
				</ul>
			</div>
			<div class="deleteButtonW">
				<a href="/settings/confirmRemoveProfilePicture?group={{ group.id }}" class="deleteButton" onclick="return ajaxConfirm('remove_profile_picture', 'confirm_remove_profile_picture_group', '/settings/removeProfilePicture?group={{ group.id }}');" data-tooltip="{{ L('remove_profile_picture') }}" aria-label="{{ L('remove_profile_picture') }}"></a>
			</div>
		</div>
		{% else %}
		{% if avatarPvInfo is not null %}
		<a href="{{ avatarPhoto.url }}" data-pv="{{ json(avatarPvInfo) }}" onclick="return openPhotoViewer(this)">{{ group | pictureForAvatar('cr') }}</a>
		{% else %}
		{{ group | pictureForAvatar('cr') }}
		{% endif %}
		{% endif %}
		{% else %}
		{% if canEditGroup %}
		<a href="/groups/{{ group.id }}/edit" onclick="new ProfilePictureLayer({{ group.id }}).show(); return false;">
			<span class="ava avaPlaceholder inProfile group own"></span><div class="ownProfileAvaPlaceholderLabel">{{L('upload_avatar')}}</div>
		</a>
		{%else%}
		<span class="ava avaPlaceholder inProfile group"></span>
		{%endif%}
		{%endif%}
		{% if currentUser is not null and (membershipStateText is not empty or membershipState=="NONE" or membershipState=="INVITED") %}
		<div class="profileBelowAva">
			{% if group.event %}
			{% if membershipState=="NONE" or membershipState=="INVITED" %}
				<a href="/groups/{{ group.id }}/join?csrf={{ csrf }}" class="button{{ membershipStateText is empty ? '' : ' withText' }}" data-ajax>{{ L('join_event_certain') }}</a>
				{% if group.domain is empty or group.hasCapability("TENTATIVE_MEMBERSHIP") %}
				<a href="/groups/{{ group.id }}/join?csrf={{ csrf }}&tentative=1" class="button withText" data-ajax>{{ L('join_event_tentative') }}</a>
				{% endif %}
			{% endif %}
			{% else %}
			{% if membershipState=="NONE" or membershipState=="INVITED" %}
				<a href="/groups/{{ group.id }}/join?csrf={{ csrf }}" class="button{{ membershipStateText is empty ? '' : ' withText' }}" data-ajax>{{ L(group.accessType=='CLOSED' ? 'apply_to_join_group' : 'join_group') }}</a>
			{% endif %}
			{% endif %}
			{% if membershipStateText is not empty %}
			<div class="friendshipStatus">{{ membershipStateText }}</div>
			{% endif %}
		</div>
		{% endif %}
		<ul class="actionList marginAfter marginBefore">
		{% if currentUser is not null %}
			{% if membershipState=="MEMBER" or membershipState=="TENTATIVE_MEMBER" %}
			{% if group.event and (group.domain is empty or group.hasCapability("TENTATIVE_MEMBERSHIP")) %}
			{% if membershipState=="MEMBER" %}
			<li><a href="/groups/{{ group.id }}/join?csrf={{ csrf }}&tentative=1" data-ajax>{{ L('join_event_tentative') }}</a></li>
			{% else %}
			<li><a href="/groups/{{ group.id }}/join?csrf={{ csrf }}" data-ajax>{{ L('join_event_certain') }}</a></li>
			{% endif %}
			{% endif %}
			<li><a href="/groups/{{ group.id }}/leave?csrf={{ csrf }}"{% if group.accessType!='OPEN' %} data-confirm-action="/groups/{{ group.id }}/leave?csrf={{ csrf }}" data-confirm-title="{{ L(group.event ? 'leave_event' : 'leave_group') }}" data-confirm-message="{{ L(group.event ? 'confirm_leave_event' : 'confirm_leave_group', {'type': group.accessType}) | nl2br }}"{% else %} data-ajax{% endif %}>{{ L(group.event ? 'leave_event' : 'leave_group') }}</a></li>
			{% if group.accessType!='PRIVATE' or canManageGroup %}
			<li><a href="/my/friends?act=groupInvite&group={{ group.id }}">{{ L('invite_friends') }}</a></li>
			{% endif %}
			{% endif %}
			{% if membershipState=='REQUESTED' %}
			<li><a href="/groups/{{ group.id }}/leave?csrf={{ csrf }}" data-ajax>{{ L(group.event ? 'leave_event' : 'leave_group') }}</a></li>
			{% endif %}
			<li><a href="/groups/{{ group.id }}/{{ isBookmarked ? "removeBookmark" : "addBookmark" }}?csrf={{ csrf }}" id="profileBookmarkButton" data-ajax data-ajax-show="bookmarkLoader"><span id="profileBookmarkButtonText">{{ L(isBookmarked ? 'remove_bookmark' : 'add_bookmark') }}</span> <span class="inlineLoader" id="bookmarkLoader" style="display: none"></span></a></li>
		{% endif %}
		{% if canEditGroup %}
			<li><a href="/groups/{{ group.id }}/edit">{{ L(group.event ? 'edit_event' : 'edit_group') }}</a></li>
		{% elseif canManageGroup %}
			<li><a href="/groups/{{ group.id }}/editMembers">{{ L(group.event ? 'manage_event' : 'manage_group') }}</a></li>
		{% endif %}
			{% if userPermissions is not null and userPermissions.canReport(group) %}
				<li><a href="/system/reportForm?type=group&id={{ group.id }}" data-ajax-box>{{ L('report') }}</a></li>
			{% endif %}
			{% if currentUser is not null %}
				{% if userPermissions.hasPermission('MANAGE_GROUPS') %}
					<li class="separator"></li>
					<li><a href="/groups/{{ group.id }}/groupinfo">{{ L('admin_manage_group') }}</a></li>
				{% endif %}
			{% endif %}
		</ul>

		<div class="profileColumnBorder">
			<div class="rightColumnBorder"></div>
			{% if group.memberCount>0 %}
			{% include "profile_module_user_grid" with {'users': members, 'headerTitle': L('members'), 'headerHref': "/groups/#{group.id}/members", 'subheaderTitle': L('X_people', {'count': group.memberCount})} %}
			{% endif %}
			{% if group.event and group.tentativeMemberCount>0 %}
			{% include "profile_module_user_grid" with {'users': tentativeMembers, 'headerTitle': L('tentative_members'), 'headerHref': "/groups/#{group.id}/tentativeMembers", 'subheaderTitle': L('X_people', {'count': group.tentativeMemberCount})} %}
			{% endif %}
			{% if links is not empty or canManageGroup %}
			{% include "profile_module_group_links" with {'links': links, 'headerTitle': L('group_links'), 'headerHref': "/groups/#{group.id}/links", 'headerAjaxBox': true, 'subheaderTitle': L('group_links_X_pages', {'count': links | length})} %}
			{% endif %}
			{% if group.photosState!='DISABLED' and (albums is not empty or canManageGroup) %}
				{% include "profile_module_photo_albums" with {'albums': albums, 'headerTitle': L('photo_albums'), 'headerHref': "/groups/#{group.id}/albums", 'subheaderTitle': L('X_photo_albums', {'count': photoAlbumCount}), 'ownerID': -group.id} %}
			{% endif %}
			{% if admins is not empty %}
			{% include "profile_module_user_list" with {'users': admins, 'headerTitle': L(group.event ? 'event_organizers' : 'group_admins'), 'headerHref': "/groups/#{group.id}/admins", 'headerAjaxBox': true, 'subheaderTitle': L(group.event ? 'event_X_organizers' : 'group_X_admins', {'count': admins.size})} %}
			{% endif %}
		</div>
	</div>
</div>
{% script %}initExpandingProfileColumn(ge("left"), ge("right"), ge("profileLayout"));{% endscript %}
{%endblock%}