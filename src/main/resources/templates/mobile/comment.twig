{# @pebvariable name="post" type="smithereen.model.viewmodel.CommentViewModel" #}
{# @pebvariable name="realPost" type="smithereen.model.comments.Comment" #}
{% set realPost=post.post %}
{% set replyLevel=realPost.replyLevel-(baseReplyLevel | default(0)) %}
<a name="comment{{realPost.idString}}"></a>
<div class="post comment{{ commentViewType=='TWO_LEVEL' and not hideIndent and replyLevel>0 ? ' twoLevelIndented' : '' }}" id="comment{{realPost.idString}}" data-reply-name="{{ users[realPost.authorID].nameForReply}}" data-replying-name="{{ L('in_reply_to_name', {'name': users[realPost.authorID].firstAndGender}) }}">
	{% if replyLevel>0 and not hideIndent %}
	{% if commentViewType=='THREADED' %}
	<div style="--indent-level: {{ min(replyLevel, maxReplyDepth) }}" class="treeIndent"></div>
	{% endif %}
	{% endif %}
	{%if not(realPost.deleted)%}
	{% if users[realPost.authorID].suspended %}
	<div class="commentAvaWrap" id="postSuspendedAvaWrap{{ realPost.idString }}">
		<a href="{{ profileURL(realPost.authorID) }}"{{ profileRel(realPost.authorID) }}><span class="ava avaPlaceholder sizeA suspended" style="width: 32px; height: 32px;"></span></a>
	</div>
	<div class="commentContentWrap" id="postSuspendedContentWrap{{ realPost.idString }}">
		<div class="authorNameWrap"><a href="{{ profileURL(realPost.authorID) }}" class="authorName"{{ profileRel(realPost.authorID) }}>{{ L('suspended_user') }}</a></div>
		<div class="postContent">
			{%- if currentUser is not null -%}
			{{ L('comment_suspended_warning_show', {}, {'show': {'href': 'javascript:void(0)', 'onclick': "ge('postSuspendedAvaWrap#{realPost.idString}').remove();ge('postSuspendedContentWrap#{realPost.idString}').remove();ge('postAvaWrap#{realPost.idString}').show();ge('postContentWrap#{realPost.idString}').show();"} }) }}
			{%- else -%}
			{{ L('comment_suspended_warning') }}
			{%- endif -%}
			<div class="postInfo">
				<a href="{{realPost.internalURL}}" onclick="return highlightComment('{{realPost.idString}}')" class="postLink">{{LD(realPost.createdAt)}}</a>
				{% if replyLevel>maxReplyDepth %}<span class="commentInReply grayText"> {{ L('comment_in_reply_to_user_short', {'gender': users[realPost.authorID].gender, 'name': users[post.parentAuthorID] | name('firstAndGender')}, {'parentComment': {'href': profileURL(post.parentAuthorID), 'class': "grayText parentCommentLink", 'data-parent-id': realPost.replyKey.last, 'onclick': "highlightComment(#{realPost.replyKey.last}); return false;"} }) }}</span>{% endif %}
			</div>
		</div>
	</div>
	{% endif %}
	{% if currentUser is not null or not users[realPost.authorID].suspended %}
	<div class="commentAvaWrap"{% if users[realPost.authorID].suspended %} id="postAvaWrap{{ realPost.idString }}" style="display: none"{% endif %}>
		<a href="{{ profileURL(realPost.authorID) }}"{{ profileRel(realPost.authorID) }}>{{ users[realPost.authorID] | pictureForAvatar('a', 32) }}</a>
	</div>
	<div class="commentContentWrap"{% if users[realPost.authorID].suspended %} id="postContentWrap{{ realPost.idString }}" style="display: none"{% endif %}>
		<div class="authorNameWrap"><a href="{{ profileURL(realPost.authorID) }}" class="authorName"{{ profileRel(realPost.authorID) }}>{{ users[realPost.authorID] | name }}</a></div>
		{% if realPost.hasContentWarning %}
			<input type="checkbox" id="postCW_{{ realPost.idString }}" class="commentCWCheckbox" style="display: none"/>
		<div class="postCWWrap">
			<label for="postCW_{{ realPost.idString }}" class="postCWButton ellipsize">{{ realPost.contentWarning | default(L('cw_default')) }}</label>
		{% endif %}
		<div class="postContent">{{ realPost.text | postprocessHTML | truncateText }}</div>
		{% if realPost.attachments is not null %}
		{{ renderAttachments(realPost, realPost.ownerID>0 ? users[realPost.ownerID] : groups[-realPost.ownerID]) }}
		{% endif %}
		{% if realPost.hasContentWarning %}
		</div>
		{% endif %}
		{%set interactions=commentInteractions[realPost.id]%}
		<div class="postInfo">
			<a href="{{realPost.internalURL}}" onclick="return highlightComment('{{realPost.idString}}')" class="postLink">{{LD(realPost.createdAt)}}</a>
			{% if replyLevel>maxReplyDepth %}<span class="commentInReply grayText"> {{ L('comment_in_reply_to_user_short', {'gender': users[realPost.authorID].gender, 'name': users[post.parentAuthorID] | name('firstAndGender')}, {'parentComment': {'href': profileURL(post.parentAuthorID), 'class': "grayText parentCommentLink", 'data-parent-id': realPost.replyKey.last, 'onclick': "highlightComment(#{realPost.replyKey.last}); return false;"} }) }}</span>{% endif %}<br/>
			<div class="actions">
				{% if currentUser is not null %}
					{% if not hideReplyLink and canComment -%}
						<a href="{{realPost.internalURL}}" onclick="return showReplyForm('{{realPost.idString}}', 'wallPostForm_comment_{{ parentObject.commentParentID.htmlElementID }}', 'comment', false)">{{L('add_reply')}}</a>
					{%- endif %}
					{% set options=[] %}
					{% if interactions is not null and interactions.likeCount>0 %}
						{% set _=options.add({'type': 'link', 'href': "#{realPost.internalURL}/likes", 'label': L('liked_by_X_people', {'count': interactions.likeCount}).toString()}) %}
					{% endif %}
					{% if userPermissions is not null and userPermissions.canDeletePost(realPost) and not suppressDeletion %}
						{% set _=options.add({'type': 'confirm', 'label': L('delete').toString(), 'title': 'delete_reply', 'msg': 'delete_reply_confirm', 'url': "#{realPost.internalURL}/delete"}) %}
					{% endif %}
					{% if userPermissions is not null and userPermissions.canEditPost(realPost) %}
						{% set _=options.add({'type': 'link', 'label': L('edit').toString(), 'href': "#{realPost.internalURL}/edit"}) %}
					{% endif %}
					{% if userPermissions is not null and userPermissions.canReport(realPost) %}
						{% set _=options.add({'type': 'link', 'label': L('report').toString(), 'href': "/system/reportForm?type=comment&id=#{realPost.idString}", 'ajax': 'box'}) %}
					{% endif %}
					{% if not realPost.local %}
						{% set _=options.add({'type': 'link', 'target': '_blank', 'href': realPost.activityPubURL, 'label': L('open_on_server_X', {'domain': realPost.activityPubURL.host}).toString()}) %}
					{% endif %}

					<a href="#" onclick="return showOptions(this)" data-options="{{ json(options) }}">{{ L('more_actions') }}</a>
				{% endif %}
			</div>
		</div>
		{%if interactions is not null%}
			<div class="postActions">
				<span class="likeWrap">
					<a href="{{realPost.internalURL}}/{%if interactions.isLiked%}un{%endif%}like?csrf={{csrf}}" class="action like{%if interactions.isLiked%} liked{%endif%}" id="likeButtonPost{{realPost.idString}}" data-obj-type="post" data-obj-id="{{realPost.idString}}" data-popover-url="{{realPost.internalURL}}/likePopover" {% if currentUser is not null %}onclick="return likeOnClick(this)"{% else %}data-ajax-box{% endif %}>
						<span class="icon">&nbsp;</span><span class="counter" id="likeCounterPost{{realPost.idString}}" style="{%if interactions.likeCount==0%}display: none{%endif%}">
						{{- interactions.likeCount -}}
					</span></a>
				</span>
			</div>
		{%endif%}
	</div>
	{% endif %}
	{%else%}
	<div class="commentContentWrap">
		<i>{{L('deleted_placeholder')}}</i>
	</div>
	{%endif%}
</div>
{% if not hideReplies and commentViewType!='FLAT' and not (commentViewType=='TWO_LEVEL' and replyLevel>0) %}
<div id="commentReplies{{realPost.idString}}" class="replies">
	{% for reply in post.repliesObjects %}
		{% include "comment" with {'post': reply} %}
		{% set realPost=post.post %}
		{% set replyLevel=realPost.replyLevel-(baseReplyLevel | default(0)) %}
	{% endfor %}
	{% if post.loadableRepliesCount>0 %}
	<div id="loadRepliesContainer{{ realPost.idString }}" class="threadedIndented" style="--indent-level: {{ min(replyLevel-1, maxReplyDepth) }}">
		<a class="loadRepliesLink" onclick="return loadCommentBranch(this, '{{ realPost.idString }}', 0)" data-offset="{{ post.repliesObjects | length }}" id="loadRepliesLink{{ realPost.idString }}">{{ L(post.loadedRepliesCount>0 ? 'comments_show_X_more_replies' : 'comments_show_X_replies', {'count': post.loadableRepliesCount}) }}</a>
		<div class="loadRepliesLink" id="repliesLoader{{ realPost.idString }}" style="display: none;"><span class="loader"></span></div>
		<div class="depthIndicator"></div>
	</div>
	{% endif %}
</div>
{% endif %}