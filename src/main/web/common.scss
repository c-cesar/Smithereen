@import "basics.scss";

@svg-load radioOff url('img/radio_off.svg'){
	fill: $textAreaBorder;
}
@svg-load radioOn url('img/radio_on.svg') {
	fill: $textAreaBorder;
	*[fill=lime]{
		fill: $buttonBorder;
	}
}
@svg-load radioOnHover url('img/radio_on_hover.svg') {
	fill: $textAreaBorder;
	*[fill=red]{
		fill: $blockBackground;
	}
	*[fill=lime]{
		fill: $buttonBorder;
	}
}
@svg-load radioOffHover url('img/radio_off_hover.svg') {
	fill: $textAreaBorder;
	*[fill=red]{
		fill: $blockBackground;
	}
}

@svg-load checkboxOff url('img/checkbox_off.svg'){
	fill: $textAreaBorder;
}
@svg-load checkboxOn url('img/checkbox_on.svg') {
	fill: $textAreaBorder;
	*[fill=lime]{
		fill: $buttonBorder;
	}
}
@svg-load checkboxOnHover url('img/checkbox_on_hover.svg') {
	fill: $textAreaBorder;
	*[fill=red]{
		fill: $blockBackground;
	}
	*[fill=lime]{
		fill: $buttonBorder;
	}
}
@svg-load checkboxOffHover url('img/checkbox_off_hover.svg') {
	fill: $textAreaBorder;
	*[fill=red]{
		fill: $blockBackground;
	}
}
@svg-load dateInputIcon url('img/calendar_input.svg') {
	fill: $textAreaBorder;
	*[fill=red]{
		fill: $blockBackground;
	}
}
@svg-load timeInputIcon url('img/time_input.svg') {
	fill: $textAreaBorder;
	*[fill=red]{
		fill: $blockBackground;
	}
}


@mixin layer-shadow{
	box-shadow:
		0 1px 1.1px rgba(0, 0, 0, 0.028),
		0 2.3px 2.7px rgba(0, 0, 0, 0.04),
		0 4.4px 5px rgba(0, 0, 0, 0.05),
		0 7.8px 8.9px rgba(0, 0, 0, 0.06),
		0 14.6px 16.7px rgba(0, 0, 0, 0.072),
		0 35px 40px rgba(0, 0, 0, 0.1)
	;
}

@mixin popup-shadow{
	box-shadow:
		0 0.1px 0.1px rgba(0, 0, 0, 0.028),
		0 0.1px 0.3px rgba(0, 0, 0, 0.04),
		0 0.3px 0.5px rgba(0, 0, 0, 0.05),
		0 0.4px 0.9px rgba(0, 0, 0, 0.06),
		0 0.8px 1.7px rgba(0, 0, 0, 0.072),
		0 2px 4px rgba(0, 0, 0, 0.1)
	;
}

@mixin medium-shadow{
	box-shadow:
		0 0.2px 0.2px rgba(0, 0, 0, 0.02),
		0 0.4px 0.4px rgba(0, 0, 0, 0.028),
		0 0.8px 0.8px rgba(0, 0, 0, 0.035),
		0 1.3px 1.3px rgba(0, 0, 0, 0.042),
		0 2.5px 2.5px rgba(0, 0, 0, 0.05),
		0 6px 6px rgba(0, 0, 0, 0.07);
}

@keyframes slideFromBottom{
	0%{
		opacity: 0;
		transform: translateY(16px);
	}
	100%{
		opacity: 1;
		transform: translateY(0);
	}
}

@keyframes slideFromTop{
	0%{
		opacity: 0;
		transform: translateY(-16px);
	}
	100%{
		opacity: 1;
		transform: translateY(0);
	}
}

@keyframes fadeOut{
	0%{
		opacity: 1;
	}
	100%{
		opacity: 0;
	}
}

@keyframes fadeIn{
	0%{
		opacity: 0;
	}
	100%{
		opacity: 1;
	}
}

@keyframes highlight{
	0%, 100%{
		background-color: color($blockBackground alpha(0%));
	}
	3%, 50%{
		background-color: color($blockBackground alpha(100%));
	}
}

body{
	width: 100%;
}

table{
	table-layout: fixed;
	td{
		padding: 0;
	}
}

.singleLine{
	overflow-x: hidden;
	text-overflow: ellipsis;
	white-space: nowrap;
}

.ava{
	display: inline-block;
	width: var(--ava-width);
	height: var(--ava-height);
	img{
		width: var(--ava-width);
		height: var(--ava-height);
	}
	&.sizeA{
		--ava-width: 50px;
		--ava-height: 50px;
	}
	&.sizeB{
		--ava-width: 100px;
		--ava-height: 100px;
	}
	&.sizeC{
		--ava-width: 200px;
		--ava-height: 200px;
	}
	&.sizeD{
		--ava-width: 400px;
		--ava-height: 400px;
	}
}

.avaHasImage.sizeR img{
	min-width: 200px;
	height: auto;
}

.avaPlaceholder.inProfile{
	width: 200px;
	height: 115px;
	position: relative;
	&.own{
		background-image: svg-load("img/ava_question.svg", fill: $avaPlaceholderOwnColor);
		background-color: $avaPlaceholderOwnBackgroundColor;
		border: none;
	}
}

.layerScrim, .layerContainer{
	position: fixed;
	left: 0;
	top: 0;
	bottom: 0;
	right: 0;
}

.layerScrim{
	background-color: rgba(0, 0, 0, .2);
	z-index: 100;
	&.darker{
		background-color: rgba(0, 0, 0, .7);
	}
}

.layerContainer{
	width: 100%;
	height: 100%;
	z-index: 110;
}

input[type=text], input[type=password], input[type=email], input[type=date], input[type=time], input[type=number], textarea, select, .prefixedInput{
	border: solid 1px $textAreaBorder;
	padding: 3px;
	appearance: none;
	background-color: $bg;
}

.prefixedInput{
	display: inline-flex;
	padding: 0 0 0 3px;
	input[type=text]{
		border: none;
		padding-left: 0;
		flex-grow: 1;
		min-width: 0;
	}
	.prefix{
		color: $auxiliaryGrey;
		padding: 3px 0;
		cursor: text;
		flex: none;
	}
}

textarea{
	resize: none;
}


::placeholder{
	color: $auxiliaryGrey;
	opacity: 1;
	transition: opacity .2s ease;
}

:focus::placeholder{
	opacity: .7;
}

.gray{
	background: $gray;
}

.post{
	border-spacing: 0;
	p{
		margin-top: 8px;
		margin-bottom: 8px;
	}

	p:first-child{
		margin-top: 0;
	}

	p:last-child{
		margin-bottom: 0;
	}
	blockquote{
		margin: -2px 0;
		padding: 2px 0 2px 8px;
		border-left: solid 2px $textAreaBorder;
	}
	blockquote:first-child{
		margin-top: 0;
	}
	blockquote:last-child{
		margin-bottom: 0;
	}
}

code{
	background: $wallCommentSeparator;
	padding: 2px 4px;
	border-radius: 2px;
	&.standaloneCodeBlock{
		padding: $mediumPadding;
	}
}
pre{
	tab-size: 4;
	background: $wallCommentSeparator;
	border-radius: 2px;
}
pre>code{
	background: none;
	display: block;
}

.postContent{
	word-wrap: break-word;
}

.postAttachments{
	.aspectBoxW{
		margin: 9px 0 4px;
	}
}

.wallPostForm{
	position: relative;
	textarea{
		width: 100%;
		max-width: 100%;
		vertical-align: top;
	}
}

.hasJS .wallPostForm.collapsed{
	.bottomBar{
		display: none;
	}
}

body:not(.hasJS) .jsRequired{
	display: none;
}

input[type=radio]{
	appearance: none;
	background: svg-inline(radioOff) no-repeat center;
	margin: 0;
	width: 16px;
	height: 16px;
	&:checked{
		background: svg-inline(radioOn) no-repeat center;
		&:hover{
			background: svg-inline(radioOnHover) no-repeat center;
		}
	}
	&:hover{
		background: svg-inline(radioOffHover) no-repeat center;
	}
}

input[type=checkbox]{
	appearance: none;
	background: svg-inline(checkboxOff) no-repeat center;
	margin: 0;
	width: 16px;
	height: 16px;
	&:checked{
		background: svg-inline(checkboxOn) no-repeat center;
		&:hover{
			background: svg-inline(checkboxOnHover) no-repeat center;
		}
	}
	&:hover{
		background: svg-inline(checkboxOffHover) no-repeat center;
	}
}


.dataTable{
	border-spacing: 0;
	border: solid 1px $dataTableBorder;
	th{
		border-left: solid 1px $dataTableBorderLight;
		border-right: solid 1px $dataTableBorder;
		border-bottom: solid 1px $dataTableBorder;
		background: $dataTableHeaderBackground;
		color: $normalLink;
		text-align: left;
		&:first-child{
			border-left: 0;
		}
		&:last-child{
			border-right: 0;
		}
	}
	th, td{
		line-height: 1.09em;
		padding: 10px;
	}
	tr:nth-child(odd){
		background: $dataTableOddRow;
	}
	&.padAround{
		margin: 8px 0;
	}

	&.noOuterBorders{
		border-bottom: none;
		tr:first-child td{
			border-top: none;
		}
	}
}

.noBorderSpacing{
	border-spacing: 0;
}



.fileUploadBoxContent{
	position: relative;
	input{
		display: none;
	}
	form{
		padding: 10px 0;
		text-align: center;
	}
	>.inner{
		padding: 0 20px 20px;
		line-height: 130%;
	}
}

.imageAreaSelector{
	position: absolute;
	top: 0;
	left: 0;
	right: 0;
	bottom: 0;
	.selected{
		position: absolute;
		cursor: move;
		.markerCont{
			width: 100%;
			height: 100%;
			position: relative;
		}
		.marker{
			width: $imgAreaSelectorMarkerSize;
			height: $imgAreaSelectorMarkerSize;
			border-radius: $imgAreaSelectorMarkerBorderRadius;
			background: #DCDCDC;
			opacity: 0.3;
			position: absolute;
			transition: opacity 0.2s ease;
			&.tl{
				top: calc(-$imgAreaSelectorMarkerSize/2);
				left: calc(-$imgAreaSelectorMarkerSize/2);
				cursor: nwse-resize;
			}
			&.tr{
				top: calc(-$imgAreaSelectorMarkerSize/2);
				right: calc(-$imgAreaSelectorMarkerSize/2);
				cursor: nesw-resize;
			}
			&.bl{
				bottom: calc(-$imgAreaSelectorMarkerSize/2);
				left: calc(-$imgAreaSelectorMarkerSize/2);
				cursor: nesw-resize;
			}
			&.br{
				bottom: calc(-$imgAreaSelectorMarkerSize/2);
				right: calc(-$imgAreaSelectorMarkerSize/2);
				cursor: nwse-resize;
			}
			&.top, &.bottom, &.left, &.right{
				pointer-events: none;
			}
			&.top{
				top: calc(-$imgAreaSelectorMarkerSize/2);
				left: calc(50% - $imgAreaSelectorMarkerSize/2);
			}
			&.bottom{
				bottom: calc(-$imgAreaSelectorMarkerSize/2);
				left: calc(50% - $imgAreaSelectorMarkerSize/2);
			}
			&.left{
				left: calc(-$imgAreaSelectorMarkerSize/2);
				top: calc(50% - $imgAreaSelectorMarkerSize/2);
			}
			&.right{
				right: calc(-$imgAreaSelectorMarkerSize/2);
				top: calc(50% - $imgAreaSelectorMarkerSize/2);
			}
		}
		.edge{
			position: absolute;
			&.top{
				top: calc(-$imgAreaSelectorMarkerSize/2);
				left: calc($imgAreaSelectorMarkerSize/2);
				right: calc($imgAreaSelectorMarkerSize/2);
				height: $imgAreaSelectorMarkerSize;
				cursor: ns-resize;
			}
			&.bottom{
				bottom: calc(-$imgAreaSelectorMarkerSize/2);
				left: calc($imgAreaSelectorMarkerSize/2);
				right: calc($imgAreaSelectorMarkerSize/2);
				height: $imgAreaSelectorMarkerSize;
				cursor: ns-resize;
			}
			&.left{
				left: calc(-$imgAreaSelectorMarkerSize/2);
				top: calc($imgAreaSelectorMarkerSize/2);
				bottom: calc($imgAreaSelectorMarkerSize/2);
				width: $imgAreaSelectorMarkerSize;
				cursor: ew-resize;
			}
			&.right{
				right: calc(-$imgAreaSelectorMarkerSize/2);
				top: calc($imgAreaSelectorMarkerSize/2);
				bottom: calc($imgAreaSelectorMarkerSize/2);
				width: $imgAreaSelectorMarkerSize;
				cursor: ew-resize;
			}
		}
	}
	.scrim{
		position: absolute;
		background: rgba(0,0,0,.75);
	}
	&.moving .marker{
		opacity: 0.6;
	}
}

.tinyInlineAva .ava{
	vertical-align: middle;
	margin-right: 8px;
}

#boxLoader{
	position: fixed;
	top: 0;
	right: 0;
	bottom: 0;
	left: 0;
	display: flex;
	justify-content: center;
	>div{
		width: 100px;
		height: 50px;
		background: rgba(0,0,0,.75) svg-load('img/loading_anim.svg', fill: #fff) no-repeat center;
		background-size: 64px 16px;
		border-radius: 5px;
		backdrop-filter: saturate(180%) blur(3px);
		@include layer-shadow;
	}
}

.clear{
	clear: both;
}

.marginsAreMessy{
	height: 1px;
	margin-top: -1px;
}

ul.actualList{
	list-style-type: square;
	color: $normalLink;
	padding: 0;
	padding-left: 15px;
	li{
		margin-bottom: 5px;
		span{
			color: $text;
		}
	}
}

.loader, .inlineLoader, .ajaxReplaceWithLoader.ajaxLoading::before{
	background: svg-load('img/loading_anim.svg', fill: $normalLink) no-repeat center;
	background-size: 32px 8px;
	min-width: 32px;
	min-height: 8px;
}
.loader.white, .inlineLoader.white{
	background: svg-load('img/loading_anim.svg', fill: $textOnAccent) no-repeat center;
}

.inlineLoader{
	display: inline-block;
}

.feedIcon{
	width: 16px;
	height: 16px;
	float: left;
	&.feedIconAdd{
		background: svg-load('img/friends_s.svg');
	}
	&.feedIconGroup{
		background: svg-load('img/groups_s.svg');
	}
	&.feedIconStatus{
		background: svg-load('img/statuses_s.svg');
	}
	&.feedIconEvent{
		background: svg-load('img/events_s.svg');
	}
	&.feedIconPhoto{
		background: svg-load('img/photos_s.svg');
	}
	&.feedIconPhotoTag{
		background: svg-load('img/tags_s.svg');
	}
	&.feedIconPersonal{
		background: svg-load('img/pages_s.svg');
	}
	&.feedIconTopic{
		background: svg-load('img/topics_s.svg');
	}
}

.undecoratedLink{
	&, &:link, &:hover, &:visited, &:visited:hover{
		color: $text;
		text-decoration: none;
	}
}

.red{
	color: #851614;
}

.toggler{
	display: none;
}

.toggled{
	.hideWhenOff, .showWhenOn{
		display: none;
	}
}

.toggler:checked+.toggled{
	.hideWhenOff, .showWhenOn{
		display: block;
		&.showAsGrid{
			display: grid;
		}
		&.showAsFlex{
			display: flex;
		}
	}
	.hideWhenOn, .showWhenOff{
		display: none;
	}
}

small{
	font-size: 10px;
}

.lowercase{
	text-transform: lowercase;
}

.uppercase{
	text-transform: uppercase;
}

.dateTimeInput{
	display: flex;
	align-content: center;
	input[type=date]{
		flex-grow: 2;
	}
	input[type=time]{
		flex-grow: 1;
	}
	input{
		width: unset !important;
	}
}

.disableSelection{
	user-select: none;
}

.adminInfoGrid{
	display: grid;
	>*{
		/* I hate that I have to do this shit to tell it to disregard any intrinsic sizes */
		min-width: 0;
		overflow-x: hidden;
	}
	.avaAndName{
		display: grid;
		grid-gap: 0 $smallPadding;
		grid-template-columns: 30px 1fr;
		.avaW{
			grid-row: span 2;
		}
	}
}

.smallMarginRight{
	margin-right: $smallPadding;
}

.mediumMarginRight{
	margin-right: $mediumPadding;
}

.flexButtons{
	display: flex;
	flex-wrap: wrap;
	margin: -$smallPadding 0 0 -$smallPadding;
	>*{
		margin: $smallPadding 0 0 $smallPadding;
	}
}

.ajaxReplaceWithLoader.ajaxLoading{
	color: transparent;
	position: relative;
	&::before{
		content: ' ';
		display: block;
		position: absolute;
		top: 0;
		left: 0;
		right: 0;
		bottom: 0;
		background-position: 10px center;
	}
}

.privatePostLockIcon{
	display: inline-block;
	width: 8px;
	height: 9px;
	background: svg-load('img/lock.svg', fill: $privatePostLockIconColor);
	margin-left: 5px;
}

.smallVMargin{
	margin: $smallPadding 0;
}

.itemWithAvatar{
	display: grid;
	grid-template-columns: 50px 1fr;
	grid-gap: $mediumPadding;
}

.itemWithMediumAvatar{
	display: grid;
	grid-template-columns: 100px 1fr;
	grid-gap: $mediumPadding;
}

.transparent{
	opacity: 0.5;
}

.disabled{
	pointer-events: none;
}

.accent{
	color: $normalLink;
}

.friendListLabel{
	margin: 3px 0px;
	padding: 2px 4px;
	line-height: 175%;
	white-space: nowrap;
	&.l0{
		background-color: #F5E9E2;
		color: #8B4C23;
	}
	&.l1{
		background-color: #FAEAD8;
		color: #764F14;
	}
	&.l2{
		background-color: #FAF3D8;
		color: #817945;
	}
	&.l3{
		background-color: #E8F2DC;
		color: #37702A;
	}
	&.l4{
		background-color: #E0ECEA;
		color: #4C7171;
	}
	&.l5{
		background-color: #E4EBF1;
		color: #0B5588;
	}
	&.l6{
		background-color: #E4E7F2;
		color: #2F54AA;
	}
	&.l7{
		background-color: #EDE5F0;
		color: #80478F;
	}
}

#registerForm{
	#formRow_website, #formRow_passwordConfirm{
		display: none;
	}
}

#requestInviteForm{
	#formRow_website, #formRow_password{
		display: none;
	}
}

.comboBoxW{
	input{
		width: 100%;
	}
	.completionsContainer{
		margin: -1px 1px 0;
	}
}

.scrollLocked{
	pointer-events: none;
}

.wordFilterWord{
	display: flex;
	align-items: center;
	&:not(:last-child){
		margin-bottom: 5px;
	}
	input{
		flex-grow: 1;
	}
	.deleteButton{
		flex: none;
		width: 21px;
		height: 21px;
		margin-left: 5px;
		background: svg-load('img/box_close.svg', fill: $iconColor) no-repeat center;
		opacity: .7;
		transition: opacity .2s ease;
		&:hover{
			opacity: 1;
		}
	}
}

.textByItself{
	line-height: 150%;
	p:first-child{
		margin-top: 0;
	}
	p:last-child{
		margin-bottom: 0;
	}
}

h2+.textByItself{
	margin-top: 1em;
}

.languageChooserList{
	margin: 20px;
	a, b{
		display: inline-block;
	}
}

.avaWithExtraContent{
	display: flex;
	.avaW{
		flex: none;
		width: 100px;
		margin-right: $mediumPadding;
	}
	.contentW{
		flex-grow: 1;
	}
}

